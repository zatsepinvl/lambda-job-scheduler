plugins {
    id "org.jetbrains.kotlin.jvm"
    id "org.springframework.boot" version "3.0.2"
    id "io.spring.dependency-management" version "1.1.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.22"
}

group "org.laurtz.sample-app"
version "1.0-SNAPSHOT"

kotlin {
    jvmToolchain(17)
}

repositories {
    mavenCentral()
}



dependencies {
    // Luartz
    implementation project(":luartz")

    // Spring
    implementation "org.springframework.boot:spring-boot-starter"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Logback
    //implementation "ch.qos.logback:logback-classic:1.3.5"

    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"

    // Spring Test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
}

bootRun {
    file(".env.local").readLines().each() {
        def (key, value) = it.tokenize("=")
        println("Found env $key=$value")
        environment key, value
    }
}